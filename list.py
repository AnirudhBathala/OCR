''' log transformation '''
'''
c = 255/pow(1.02,np.max(gray)-1)
im = c*(pow(1.02,(gray)-1))
im = np.array(im,np.uint8)
_,log_otsu = cv2.threshold(im,0,255,cv2.THRESH_BINARY + cv2.THRESH_OTSU)
log_ada_gau = cv2.adaptiveThreshold(im,255,cv2.ADAPTIVE_THRESH_GAUSSIAN_C,cv2.THRESH_BINARY,55,25)
cv2.imwrite("log.jpg",im)
cv2.imwrite("log otsu.jpg",log_otsu)
cv2.imwrite("log ada gau.jpg",log_ada_gau)
'''
from deepsegment import DeepSegment
segmenter = DeepSegment('en')
string = '207 is the even-length palindromes ced by the grammar of Fig. with the Wn automaton accepting as esents a “guess” that we have not yet. seen the en the end of the string w that is to be followed in state qo, we read symbols and store them on the of each input symbol onto the stack, in turn. guess that we have seen the middle, the end of w. At the stack, with the right end of w at the top and the We signify this choice by spontaneously going to state comaton is nondeterministic, we actually make both guesses: ave seen the end of w, but we also stay in state gg and continue «s and store them on the stack. state 91, We compare input symbols with the symbol at the top stack. If they match, we consume the input symbol, pop the stack, If they do not match, we have guessed wrong; our guessed w not followed by This branch dies, although other branches of the automaton may survive and eventually lead to acceptance. .. empty the stack, then we have indeed seen some input w followed by w®. We accept the input that was read up to this point. 6.1.2 The Formal Definition of Pushdown Automata, Our formal notation for a pushdown automaton (PDA) involves seven components We write the specification of a PDA P as follows: state. P= Zo, F) could The components have the following meanings: symbol the stack is Q: A finite set of states, like the states of a finite automaton. symbol, which A finite set of input symbols, also analogous to the » it. Finally, the of a finite automaton. 18, which has the sen pushing one oF A finite stack alphabet. This component, which has no is the set of symbols that we are allowed to push onto ‘ We could also design a pushdown automaton for in Fig, 5.1. However, Lwwr is slightly simpler and will eas regarding pushdown automata.'
print(segmenter.segment(string))
string2 = '207 is the even-length palindrome ced by the grammar of Fig. with the Wn automaton accepting as events a guess that we have not yet seen the en the end of the string w that is to be followed in state qom we read symbols and store them on the of each input symbol onto the stack in turn guess that we have seen the middle the end of w. At the stack with the right end of w at the top and the We signify this choice by spontaneously going to state compton is nondeterministic, we actually make both guesses ave seen the end of we but we also stay in state gg and continue is and store them on the stack state a1 We compare input symbols with the symbol at the top stack If they match we consume the input symbol pop the stack If they do not match we have guessed wrong our guessed w not followed by This branch dies although other branches of the automaton may survive and eventually lead to acceptance p. empty the stack then we have indeed seen some input w followed by w. We accept the input that was read up to this point v.4.2 The Formal Definition of ashdown automata Our formal notation for a ashdown automaton pda involves seven components We write the specification of a PDA P as follows state P= zoo f could The components have the following meanings symbol the stack is q A finite set of states like the states of a finite automaton symbol which A finite set of input symbols also analogous to the a it. finally the of a finite automaton v8 which has the sen pushing one oF A finite stack alphabet This components which has no is the set of symbols that we are allowed to push onto a We could also design a ashdown automaton for in fig. e.g. however lnwr is slightly simpler and will eas regarding ashdown automata'
print(segmenter.segment(string2))